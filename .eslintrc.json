{
  "root": true,
  "env": {
    "browser": true,
    "node": true
  },
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["prettier", "import"],
  "extends": ["prettier", "eslint:recommended", "plugin:import/recommended"],
  "rules": {
    // "@typescript-eslint/naming-convention": [
    //   2,
    //   {
    //     "selector": "default",
    //     "format": ["strictCamelCase"],
    //     "leadingUnderscore": "forbid",
    //     "trailingUnderscore": "forbid"
    //   },
    //   {
    //     "selector": "variable",
    //     "format": ["strictCamelCase", "UPPER_CASE"],
    //     "modifiers": ["const"],
    //     "leadingUnderscore": "forbid",
    //     "trailingUnderscore": "forbid"
    //   },
    //   {
    //     "selector": "variable",
    //     "format": ["strictCamelCase", "UPPER_CASE"],
    //     "modifiers": ["const"],
    //     "types": ["boolean", "string", "number"],
    //     "leadingUnderscore": "forbid",
    //     "trailingUnderscore": "forbid"
    //   },
    //   {
    //     "selector": ["variable", "property"],
    //     "types": ["boolean"],
    //     "format": ["PascalCase"],
    //     "prefix": ["is", "has", "should", "can", "will"],
    //     "leadingUnderscore": "forbid",
    //     "trailingUnderscore": "forbid"
    //   },
    //   {
    //     "selector": "variable",
    //     "modifiers": ["destructured"],
    //     "format": null
    //   },
    //   {
    //     "selector": "objectLiteralProperty",
    //     "format": null,
    //     "leadingUnderscore": "forbid",
    //     "trailingUnderscore": "forbid"
    //   },
    //   {
    //     "selector": "parameter",
    //     "format": ["strictCamelCase"],
    //     "leadingUnderscore": "allow",
    //     "trailingUnderscore": "forbid"
    //   },
    //   {
    //     "selector": ["typeLike", "enum"],
    //     "format": ["PascalCase"],
    //     "leadingUnderscore": "forbid",
    //     "trailingUnderscore": "forbid"
    //   },
    //   {
    //     "selector": "enumMember",
    //     "format": ["UPPER_CASE"],
    //     "leadingUnderscore": "forbid",
    //     "trailingUnderscore": "forbid"
    //   }
    // ],
    "no-shadow": 0,
    "no-return-await": 0,
    "no-use-before-define": 0,
    "no-unused-expressions": 0,
    "padding-line-between-statements": 0,
    "prettier/prettier": 2,
    "radix": 2,
    "curly": 2,
    "eqeqeq": [2, "smart"],
    "default-case": 2,
    "default-case-last": 2,
    "object-shorthand": 2,
    "require-atomic-updates": 2,
    "complexity": [2, 10],
    "max-depth": [2, 4],
    "max-statements": [2, 20],
    "max-params": [2, 5],
    "max-nested-callbacks": [2, 4],
    "max-lines-per-function": [
      2,
      {
        "max": 100,
        "skipBlankLines": true,
        "skipComments": true
      }
    ],
    "id-match": 2,
    "id-denylist": 2,
    "no-void": [
      "error",
      {
        "allowAsStatement": true
      }
    ],
    "no-eval": 2,
    "no-alert": 2,
    "no-proto": 2,
    "no-labels": 2,
    "no-plusplus": 2,
    "no-lonely-if": 2,
    "no-multi-str": 2,
    "no-extra-bind": 2,
    "no-new-object": 2,
    "no-lone-blocks": 2,
    "no-self-compare": 2,
    "no-useless-call": 2,
    "no-multi-assign": 2,
    "no-new-wrappers": 2,
    "no-octal-escape": 2,
    "no-extend-native": 2,
    "no-nested-ternary": 2,
    "no-param-reassign": 2,
    "no-unreachable-loop": 2,
    "no-negated-condition": 2,
    "no-implicit-coercion": 2,
    "no-constructor-return": 2,
    "newline-per-chained-call": 0,
    "no-promise-executor-return": 2,
    "no-unmodified-loop-condition": 2,
    "no-constant-binary-expression": 2,
    "prefer-template": 2,
    "prefer-object-spread": 2,
    "prefer-object-has-own": 2,
    "prefer-numeric-literals": 2,
    "prefer-exponentiation-operator": 2,
    "no-return-assign": [2, "always"],
    "no-console": 0,
    "no-sequences": [
      2,
      {
        "allowInParentheses": false
      }
    ],
    "no-else-return": [
      2,
      {
        "allowElseIf": false
      }
    ],
    "no-unneeded-ternary": [
      2,
      {
        "defaultAssignment": false
      }
    ],
    "no-restricted-syntax": [
      2,
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys, values, entries}, and iterate over the resulting array."
      },
      {
        "selector": "ForOfStatement",
        "message": "for..of loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys, values, entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "prefer-destructuring": [
      2,
      {
        "array": false,
        "object": true
      },
      {
        "enforceForRenamedProperties": false
      }
    ],
    "import/named": 0,
    "import/default": 0,
    "import/namespace": 0,
    "import/prefer-default-export": 0,
    "import/no-named-as-default-member": 0,
    "import/no-cycle": 2,
    "import/no-namespace": 0,
    "import/extensions": [2, { "js": "always" }],
    "import/no-unresolved": 2,
    "import/no-empty-named-blocks": 2,
    "import/no-useless-path-segments": [
      2,
      {
        "noUselessIndex": true
      }
    ],
    "import/no-duplicates": [
      2,
      {
        "prefer-inline": true,
        "considerQueryString": true
      }
    ],
    "import/no-extraneous-dependencies": [
      2,
      {
        "devDependencies": true
      }
    ]
  }
}
